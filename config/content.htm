<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Group member</h1>
<p><span>Repository: </span><a href="https://github.com/40623143/cd2020">40623143</a><span><span> </span>| Site:<span> </span></span><a href="https://40623143.github.io/cd2020">40623143</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723108/cd2020">40723108</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723108.github.io/cd2020">40723108</a> | 亂數分組程式<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723127/cd2020">40723127</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723127.github.io/cd2020">40723127</a> | 亂數分組程式<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723132/cd2020">40723132</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723132.github.io/cd2020">40723132</a> | 可攜系統<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723133/cd2020">40723133</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723133.github.io/cd2020">40723133</a> | <span>亂數分組程式</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723137/cd2020">40723137</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723137.github.io/cd2020">40723137</a> | 可攜系統<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723141/cd2020">40723141</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723141.github.io/cd2020">40723141</a> <span>| </span><span>可攜系統</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723143/cd2020">40723143</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723143.github.io/cd2020">40723143</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723144/cd2020">40723144</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723144.github.io/cd2020">40723144</a> | 4輪小車<br/><span>Repository:<span> </span></span><a href="https://github.com/s40723147/cd2020">40723147</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723147.github.io/cd2020">40723147</a> |<span>亂數分組程式(task leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723148/cd2020">40723148</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723148.github.io/cd2020">40723148</a> | 4輪小車<span>(task leader)</span><br/><span>Repository:<span> </span></span><a href="https://github.com/s40723150/cd2020">40723150</a><span><span> </span>| Site:<span> </span></span><a href="https://s40723150.github.io/cd2020">40723150</a> <span>| </span><span>可攜系統(task leader)</span><a href="https://s40723150.github.io/cd2020"></a></p>
<h1>分組討論紀錄</h1>
<h4>W2 直播討論</h4>
<p>問題改善：<br/>1.做好的要拍成影片<br/>2.不管會不會做每周都要推東西，不會做的可以問會做的<br/>3.分組倉儲每個組員都先用fork的，之後會把一些人拉做管理者<br/>4.之後直播都會是我負責開，組員都盡量參與有觀看直播的組員盡量發言<br/>5. https://us.misumi-ec.com/us/incadlibrary/ 這個網頁是要做什麼?</p>
<p><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/EfqQYaNAcIc" width="560"></iframe></p>
<hr/>
<h4>W3直播討論</h4>
<p>W3 直播討論：<br/>目前Project1的進度，<br/>task leader 負責整理資料推送到ag2倉儲<br/>(須註明哪個組員提供的資料，commit和內容都須注記)<br/>組員也可以用pullrequest請求資料合併</p>
<p>目前進度:<br/>可攜系統可完成網頁頁面和reveal編輯<br/>亂數分組程式<br/>四輪小車</p>
<p>問題討論:<br/>1.亂數分組程式:取到的數值有重複的問題。<br/>2.Pull request 合併頁面出現錯誤(以解決)<br/>3目前個人網頁尚未建立的組員要趕快建立起來<br/>(40623143,40723127,40723137,40723141,40723143)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/h1wE6H3GNFk" width="560"></iframe></p>
<hr/>
<h4>W4 W5直播討論</h4>
<p>目前個人網頁尚未建立的組員要趕快建立起來<br/>(40623143,40723141,40723143)<br/>40723137網頁出不來(已解決)</p>
<p>Assignment 2 任務項目<br/>1.整理 Topic 0 和 Topic 1 的電子書資料<br/>2.了解 <a href="https://cyberbotics.com/doc/guide/index">webots</a> 的資料</p>
<p><br/>分配Assignment 2的工作<br/>1.整理資料<br/><a href="https://drive.google.com/file/d/1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc/view">DigitalProductCollaboration.pdf</a>      預計分配人數2人<br/><a href="https://drive.google.com/file/d/1KRwEcU7Vn65xL6twStG_EWaTKz1Ag8PG/view">IndustrialAndEngineeringProductDesignCollaboration.pdf</a>      預計分配人數3~4人<br/><a href="https://drive.google.com/file/d/13THamnfayiRT4Wa9KzmjXQSP4ZW2jIej/view">MechanicalDesignProcess.pdf</a>      預計分配人數4~5人<br/>2.整理完資料的也要去看webots的資料，協助完成。</p>
<p>轉達：<br/>各組員，儘快準備一個 webcam，以應後續 online 上課及拍攝操作影片所需<br/>每位組員的各種任務操作，都必須在 YouTube 直播加上 OBS 串流模式下，將電腦桌面疊上直播者的 webcam 畫面製作，完成後將影片嵌入個人網頁、網誌及簡報中。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FPsrfCmFD8g" width="560"></iframe></p><h1>Project 1</h1>
<h2>亂數分組</h2>
<h4><strong><a href="https://github.com/s40723147/cd2020ag2/blob/master/PDF/cd2020%20ag2%20Project%201%20%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.pdf">pdf連結</a></strong></h4>
<h4>Create by 40723147</h4>
<p>亂數分組<span><span style="background-color: #ffff00;">python</span>程式</span>-甲班</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_570665">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random
groupList=[['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155', '40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150', '40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146', '40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']]
 
group=groupList[0]
#將group數列隨機排列
random.shuffle(group)
#列印數列
print(group)
#列印數列(1~12)
print(group[0:12])
#列印數列(13~24)
print(group[12:24])
#列印數列(25~36)
print(group[24:36])
#列印數列(37~49)
print(group[36:49])</pre>
</div>
</div>
<p><span></span>使用python編寫亂數分組程式</p>
<p>[Python]-隨機random函數</p>
<div>
<div>
<div class="syntaxhighlighter py" id="highlighter_84612">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random</pre>
</div>
</div>
<span><br/></span>匯入 <span>隨機random函數</span></div>
<div><span></span></div>
<div>
<div class="syntaxhighlighter py" id="highlighter_510963">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">groupList=[['40723104', '40723107', '40723114', '40723115', '40723118', '40723122', '40723123', '40723140', '40723149', '40723151', '40723153', '40723154', '40723155', '40623143', '40723108', '40723127', '40723132', '40723133', '40723137', '40723141', '40723143', '40723144', '40723147', '40723148', '40723150', '40723103', '40723110', '40723112', '40723120', '40723125', '40723126', '40723128', '40723130', '40723139', '40723142', '40723145', '40723146', '40423155', '40723101', '40723102', '40723106', '40723111', '40723119', '40723121', '40723124', '40723134', '40723135', '40723136', '40723138']]</pre>
</div>
</div>
<div>定義 groupList=所有修課學生 共49位</div>
<div></div>
<div>
<div class="syntaxhighlighter py" id="highlighter_181931">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">group=groupList[0]</pre>
</div>
</div>
<div>設定變數group=groupList[0] </div>
<div></div>
<div>
<div class="syntaxhighlighter py" id="highlighter_920113">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">random.shuffle(group)</pre>
</div>
</div>
<div><span><span>使用 random.shuffle</span><br/><br/><span>主要運用在將函數中的順序</span>打亂</span></div>
<div><span></span></div>
<div><span></span></div>
<div>將函數(<span>group)的順序打亂</span></div>
<div><span></span></div>
<div>
<div>
<div class="syntaxhighlighter py" id="highlighter_12750">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#列印數列
print(group)
#列印數列(1~12)
print(group[0:12])
#列印數列(13~24)
print(group[12:24])
#列印數列(25~36)
print(group[24:36])
#列印數列(37~49)
print(group[36:49])</pre>
</div>
</div>
</div>
<div></div>
<div><span>print 列印運用</span></div>
<div><span></span></div>
<div><span><br/><br/>參考資料:<a href="https://nkust.gitbook.io/python/untitled">https://nkust.gitbook.io/python/untitled</a></span></div>
<div><span></span></div>
<div><span></span></div>
<div><span></span></div>
<div><span style="background-color: #ffcc99;">測試1</span></div>
<div><span><img alt="" height="177" src="https://s40723147.github.io/cd2020/images/%E7%AF%84%E4%BE%8B1.png" width="1190"/></span></div>
<div><span></span></div>
<div><span>標示 1 2 3 4 組</span></div>
<div><span></span></div>
<h4><span>簡略談<strong>Dart、<b>python</b></strong></span></h4>
<div><span></span></div>
<div>
<div><strong><span>Dart</span></strong></div>
<p><span style="background-color: #00ffff;">開放原始碼程式語言</span>，由Google主導開發，於2011年10月公開。它的開發團隊由</p>
<p>Google Chrome瀏覽器V8引擎團隊的領導者拉爾斯·巴克主持，目標在於成為下一代</p>
<p>結構化Web開發語言。</p>
<p><span style="background-color: #00ffff;">類似JavaScript</span>，<span style="background-color: #00ffff;">Dart也是一種物件導向語言</span>，但是它採用類別為基的程式設計。它</p>
<p>只允許單一繼承，<span style="background-color: #00ffff;">語法風格接近C語言。</span></p>
<p>參考資料:<a href="https://zh.wikipedia.org/zh-tw/Dart">https://zh.wikipedia.org/zh-tw/Dart</a></p>
<p><span color="#333333"><span><b>python</b></span></span><span color="#333333"><br/></span></p>
<p><span color="#333333">是一種<span style="background-color: #00ffff;">廣泛使用</span>的直譯式、進階程式、通用型程式語言，由吉多·范羅蘇姆創造，第</span></p>
<p><span color="#333333">一版釋出於1991年。可以視之為一種改良（加入一些其他程式語言的優點，如物件</span></p>
<p><span color="#333333">導向）的LISP。<span style="background-color: #00ffff;">Python的設計哲學強調代碼的可讀性和簡潔的語法</span>（尤其</span></p>
<p><span color="#333333">是使用空格縮排劃分代碼塊，而非使用大括號或者關鍵詞）。相比於C++或Java，</span></p>
<p><span color="#333333">Python讓開發者<span style="background-color: #00ffff;">能夠用更少的代碼表達想法</span>。不管是小型還是大型程式，該語言都</span></p>
<p><span color="#333333">試圖讓程式的結構清晰明瞭。</span></p>
<p>參考資料:<a href="https://zh.wikipedia.org/zh-tw/Python">https://zh.wikipedia.org/zh-tw/Python</a></p>
<hr/>
<p><strong>持續進步</strong></p>
<p>1.可更進一步的對話視窗</p>
<p>    依照客戶需求給定特定變數完成亂數抽取</p>
<p>    例如<span>:</span>給定組別、人數、或是其他條件</p>
<p>2.網頁的程序運用</p>
<p>       能夠再遠端直接作抽取動作不必下載</p>
<p>       可更加方便簡潔快速的抽取方式</p>
<p>3.在網頁上抓取資料</p>
<p>       能夠在網頁上擷取或是引用資料</p>
<p>       直接傳達到亂數程序上提供更方便的服務</p>
<p>4.資料庫存取</p>
<p>       完成亂數程序後是否可以</p>
<p>       直接作存取或是匯出動作</p>
</div><h2>可攜系統</h2>
<h4>Create Portable Programming System for Windows 10<br/>Create by 40723150</h4>
<h4><strong><a href="https://github.com/s40723150/cd2020ag2/blob/master/PDF/cd2020%20ag2%20Project%201%20%E5%8F%AF%E6%94%9C%E7%B3%BB%E7%B5%B1.pdf">pdf連結</a></strong></h4>
<p>在可攜系統目錄下先創一個 data 目錄</p>
<p><span>PortableGit：<br/><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> 下載 64-bit Git for Windows Portable 安裝在 data 目錄下</span></p>
<p><span>MSYS2：<br/><a href="https://www.msys2.org/">https://www.msys2.org/</a> 下載 msys2-x86_64-20190524.exe 並安裝在 data/msys64 的目錄下</span></p>
<p><span>python3.8.2：<br/></span><a class="link" href="https://www.python.org/downloads/windows/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/windows/</a><span><span> </span>下載 Download Windows x86-64 executable installer 準備安裝 3.8.2 python 解譯器，安裝完成後將完整資料放在 data/py382目錄底下<br/>python pip：<br/></span>到<a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a>頁面，滑鼠右鍵另存新檔到CD2020/data執行</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">python get-pip.py</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_163525"></div>
</div>
<p><span></span><span>SciTE：<a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載 full 64-bit download，解壓縮檔案至 data/wscite432，就是可以直接執行的 Scite.exe 編輯器，若希望以 UtF-8 編碼開啟文件，就必須啟用 Options 下拉式功能表中的 Global Options File（同 SciTEGlobal.properties 檔案）其中的預設值 code.page=0 （為Windows 內定的 Big-5 編碼）修改設定為 code.page=65001，表示使用使 UTF-8 編碼，若要開啟即時更新內容，將load.on.activate=1 前面的井字號拿掉，就會即時更新了（SciTE 須重啟）<br/><img caption="false" height="538" src="https://s40723150.github.io/cd2020/images/SciTE_UTF-8.gif" width="400"/><br/>修改成 UTF-8 編碼<br/><img caption="false" height="476" src="https://s40723150.github.io/cd2020/images/set_scite_loadon.gif" width="400"/><br/>修改成即時更新</span></p>
<p><span>Tiny C Compiler：<br/></span><span><a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a> git clone 整個倉儲到 data 目錄下並命名目錄為 tcc</span></p>
<p><span>Jupyterlab：<br/><a href="https://github.com/jupyterlab/jupyterlab">https://github.com/jupyterlab/jupyterlab</a> pip install jupyterlab==2.0.1 自動執行安裝</span></p>
<p><span>Fossil SCM：<br/><a href="https://www.fossil-scm.org/">https://www.fossil-scm.org/</a> 下載 fossil scm 解壓縮後將 fossil.exe 放到 data 目錄下</span></p>
<p><span>Flutter：<br/><a href="https://github.com/flutter/flutter">https://github.com/flutter/flutter </a> (在 data 目錄底下 git clone https://github.com/flutter/flutter.git -b stable)<br/></span></p>
<p><span>Visual Studio Code：<br/><a href="https://github.com/microsoft/vscode">https://github.com/microsoft/vscode</a> (目前是先安裝，安裝完成後把資料放 data/vscode 目錄下)</span></p>
<p>home/home_mdecourse：存放 ssh 的資料和.gitconfig</p>
<p>tmp：放 clone 下來的倉儲</p>
<p>ShareX：<a href="https://getsharex.com/downloads/">https://getsharex.com/downloads/</a></p>
<p>putty：<a href="http://mde.tw/cp2019/content/USB%20%E7%A8%8B%E5%BC%8F%E7%B3%BB%E7%B5%B1.html">老師整理的 putty</a> 或<span> </span><a href="https://github.com/s40723150/cd2020/raw/master/downloads/putty.7z">個人整理的 putty.7z</a></p>
<p>start.bat</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"
 
%Disk%:
 
set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
set USERPROFILE=%Disk%:\home
 
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
 
#REM for putty
#Set GIT_HOME=%CDisk%:\portablegit\bin\
#Set GIT_SSH=%Disk%:\putty\plink.exe
 
set PYTHONPATH=%Disk%:\py382\DLLs;%Disk%:\py382\Lib;%Disk%:\py382\Lib\site-packages;
set PYTHONHOME=%Disk%:\py382
 
set path_python=%Disk%:\py382;%Disk%:\py382\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
set path_git=%Disk%:\portablegit\bin;
set path_tcc=%Disk%:\tcc;
 
path=%Disk%:;%path_python%;%path_msys2%;%path_git%;%path_tcc%;
 
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
 
start /MIN %Disk%:\wscite432\wscite\SciTE.exe
start /MIN %Disk%:\wscite432\wscite\SciTE.exe
 
Exit</pre>
<div>
<div class="syntaxhighlighter html" id="highlighter_998127"></div>
</div>
<p>stop.bat</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_850557">
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
path=%PATH%;
 
taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F
 
REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F
 
EXIT</pre>
</div>
</div>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HQzz7f9IopE" width="560"></iframe><br/>詳細流程在<a href="https://s40723150.github.io/cd2020/content/W2.html">W2</a>頁面</p>
<p>基礎可攜系統<a href="https://drive.google.com/file/d/15b_VXiaXYLqaMuMAvAeZKegX4eSkiU70/view">下載</a></p>
<p>加入webots的可攜系統<a href="https://drive.google.com/open?id=1Ghi3rTB-HIZEn49PWgfOap7aha2UZvK9">下載 </a></p>
<p></p><h2>四輪小車</h2>
<p><span style="background-color: #ffff00;"><big><big>Assignment 1:</big></big></span></p>
<p>Due March 25, 2020 for class 2a .</p>
<p>What do you need to know from <a href="http://www.coppeliarobotics.com/helpFiles/index.html" rel="nofollow">http://www.coppeliarobotics.com/helpFiles/index.html</a> to implement a four-wheeled robot?</p>
<p><span style="background-color: #ffff00;"><big><big>Assignment 2:</big></big></span></p>
<p>Due April 22, 2020 for class 2a.</p>
<ol>
<li>
<p>According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot.</p>
</li>
<li>
<p>What do you need to know from<span> </span><a href="https://cyberbotics.com/doc/guide/index" rel="nofollow">https://cyberbotics.com/doc/guide/index</a><span> </span>to implement a four-wheeled robot?</p>
</li>
</ol>
<p><span style="background-color: #ffff00;"><big><big>Assignment 3:</big></big></span></p>
<p>Due May 27, 2020 for class 2a.</p>
<p>According to the reading of Topic 2 and Topic 3, propose a Mechatronic project by using CoppeliaSim or Webots and Onshape.</p>
<p><big><big><big><a href="https://www.coppeliarobotics.com/">CoppeliaSim</a><span> </span></big></big></big>(<a href="https://www.coppeliarobotics.com/downloads">download</a>)</p>
<p style="text-align: justify;">具有集成開發環境的機器人模擬器CoppeliaSim基於分佈式控制體系結構：可以通過嵌入式腳本，插件，ROS節點，BlueZero節點，遠程API客戶端或自定義解決方案分別控制每個對象/模型。這使CoppeliaSim非常通用，非常適合多機器人應用。控制器可以用C / C ++，Python，Java，Lua，Matlab，Octave或Urbi編寫。</p>
<p style="text-align: justify;">Coppelia Robotics 在<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/en/versionInfo.htm">CoppeliaSim version history</a> 中提到將不再更新 V-rep <span lang="zh-TW">,並將精力集中在CoppeliaSim上。CoppeliaSim與V-REP 100％兼容。<span style="background-color: #ffff99;">它運行速度比V-REP快，並且具有更多功能</span>。</span></p><h3>場景&amp;模型&amp;環境</h3>
<p><span style="background-color: #ffff00;"><big><big>Scenes</big></big></span></p>
<p style="text-align: justify;">場景和模型是CoppeliaSim的主要模擬元素。模型是場景的子元素。一個場景可以包含任何數量的模型</p>
<p><span style="background-color: #ffff00;"><big><big>Models</big></big></span></p>
<p style="text-align: justify;">模型是場景的子元素。除了文件（“ * .ttm”-文件類型）外，模型本身不能存在，也不能通過自身進行模擬。模型必須包含在場景中才能運行<span>。下圖為scenes &amp; Models 之間的關係:</span></p>
<p><span><img alt="" height="473" src="/images/chrome_2020-03-24_00-39-57.png" width="524"/></span></p>
<p><span style="background-color: #ffff00;"><big><big>Environment</big></big></span></p>
<p style="text-align: justify;">CoppeliaSim中的環境定義了屬於場景但不屬於場景物件的屬性和參數。保存模型時不保存環境屬性和參數，但只有保存場景則會</p>
<h3>Calculation modules</h3>
<p><span style="background-color: #ffff00;"><big><big>Collision detection</big></big></span></p>
<p><span style="background-color: #ffff00;"></span></p>
<p><span style="background-color: #ffff00;"><big><big>Distance calculation</big></big></span></p>
<p><span style="background-color: #ffff00;"></span></p>
<p><span style="background-color: #ffff00;"><big><big>Inverse kinematics</big></big></span></p>
<p><span style="background-color: #ffff00;"></span></p>
<p><span style="background-color: #ffff00;"><big><big>Dynamics</big></big></span></p>
<p style="text-align: justify;">CoppeliaSim的動力學模塊當前支持下列四種不同的物理引擎。用戶在任何時候都可以根據自己的仿真需求自由地從一種發動機快速切換到另一種發動機。物理引擎支持如此多樣化的原因是，物理模擬是一項複雜的任務，可以通過不同程度的精度，速度或支持多種功能來實現：</p>
<ul>
<ul>
<ul>
<li>
<p style="text-align: justify;"><a href="http://www.bulletphysics.org/">Bullet physics library</a><span>:</span></p>
<p style="text-align: justify;">一個開源物理引擎，具有3D碰撞檢測，剛體動力學和<span>soft body dynamics</span>（CoppeliaSim當前不支持該功能）。它用於遊戲和電影的視覺效果。它通常被視為遊戲物理引擎。</p>
</li>
<li>
<p style="text-align: justify;"><span><a href="http://www.ode.org/">Open Dynamics Engine (ODE)</a><span>:</span></span></p>
一個具有兩個主要組成部分的開源物理引擎：剛體動力學和碰撞檢測。它已在許多應用程序和遊戲中使用。它通常被視為遊戲物理引擎。</li>
<li>
<p style="text-align: justify;"><span><span><a href="https://www.cm-labs.com/vortex-studio/">VortexÂ® Studio</a><span>:<span> </span></span></span></span></p>
非開源商業物理學引擎，可產生高保真物理模擬。 Vortex提供了大量物理屬性的實際參數（即對應於物理單位），使該引擎既逼真又精確。 Vortex主要用於高性能/高精度工業和研究應用。 CoppeliaSim的Vortex插件基於Vortex Studio，該插件要求每個用戶向CM Labs註冊以獲取免費許可證密鑰。</li>
<li>
<p style="text-align: justify;"><span><span><span><a href="http://www.newtondynamics.com/">Newton Dynamics</a><span>:<span> </span></span></span></span></span></p>
Newton Dynamics是一個跨平台的逼真的物理模擬文庫。它實現了確定性求解器，它不是基於傳統的LCP或<a href="https://zh.wikipedia.org/wiki/%E8%BF%AD%E4%BB%A3">疊代</a>方法，而是分別具有兩者的穩定性和速度。這項功能使Newton Dynamics不僅成為遊戲的工具，而且還成為任何實時物理模擬的工具。當前的插件執行是BETA版本。</li>
</ul>
</ul>
</ul>
<p style="text-align: justify;"></p>
<h3>編寫代碼</h3>
<p>CoppeliaSim是高度可定制的模擬器：可以自定義模擬的每個方面。此外，模擬器本身可以進行定制，以使其性能完全符合要求。這可以通過精心設計的應用程序編程接口（API）來實現。支持六種不同的編程或編碼方法，每種方法都具有相對於其他方法的特殊優點&amp;缺點，但所有六種方法都是相互兼容的（即可以同時使用，甚至可以穿插使用）。模型，場景或模擬器本身的控制實體可以位於以下位置：</p>
<ul>
<li><span>an </span><a href="https://www.coppeliarobotics.com/helpFiles/en/scripts.htm">embedded script</a><span><span> :</span></span></li>
<li><span>an </span><a href="https://www.coppeliarobotics.com/helpFiles/en/addOns.htm">add-on</a><span><span> </span>or<span> </span></span><a href="https://www.coppeliarobotics.com/helpFiles/en/sandboxScript.htm">the sandbox script</a> :</li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/plugins.htm">plugin</a> :</li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/remoteApiOverview.htm">remote API</a> :</li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/rosInterfaces.htm">ROS node</a><span><span> :</span></span></li>
<li><span>a </span><a href="https://www.coppeliarobotics.com/helpFiles/en/blueZeroPlugin.htm">BlueZero node</a> :</li>
</ul>
<h3>模擬</h3>
<h3>Tutorials</h3>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/tutorials.htm">Tutorials</a></p>
<p><img alt="" height="57" src="/images/chrome_2020-03-24_01-07-28.png" width="249"/></p>
<h1>紀錄</h1>
<p>紀錄每週專案(亂數分組紀錄、可攜系統紀錄、四輪小車紀錄)進度</p>
<h2>亂數分組紀錄</h2>
<p>W2：<br/>相關資料尋找、查詢、閱讀</p>
<p>簡易python撰寫 練習 運用 </p>
<p>編寫亂數分組程序</p>
<p>討論其關聯性及應用</p>
<p><span>W3：<br/>製作相關內容整理</span></p>
<p><span>編輯程序 流程最簡化</span></p>
<p><span>PDF製作 編排整理網誌 Revral 撰寫</span></p>
<p></p><h2>可攜系統紀錄</h2>
<p>W2：<br/>安裝 python, SciTE, Portablegit, msys2, <span>Tiny C Compiler, Jupyterlab, Fossil SCM, Leo Editor 和 Flutter 放入可攜系統(有先放先前的putty和ssh到測試是否可以順利使用ssh改版)。</span></p>
<p><span>W3：<br/>配置webots到可攜系統上，測試msys2裡建立gcc編譯環境。</span></p>
<h2>四輪小車紀錄</h2>
<p>W2</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/index.html">CoppeliaSim User Manual</a> 內容分析</p>
<p>了解製作四輪機器人所需功能</p>
<p>W3</p>
<p><span>了解製作四輪機器人所需功能(<a href="https://www.coppeliarobotics.com/helpFiles/index.html">CoppeliaSim User Manual</a>)</span></p>
<p><span>著手進行機器人製作</span></p>
<p><span>PDF製作</span></p>